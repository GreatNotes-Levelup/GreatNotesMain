#Elastic Beanstalk Nginx Configuration File

user nginx;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 200000;

events {
  worker_connections 1024;
}

http {
  server_tokens off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  map $http_upgrade $connection_upgrade {
    default "upgrade";
  }

  upstream nodejs {
    server 127.0.0.1:8081;
    keepalive 256;
  }

  server {
    listen 80 default_server;
    access_log /var/log/nginx/access.log main;

    if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
      set $year $1;
      set $month $2;
      set $day $3;
      set $hour $4;
    }

    client_header_timeout 60;
    client_body_timeout 60;
    keepalive_timeout 60;

    gzip on;
    gzip_comp_level 4;
    gzip_types text/html text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    location / {
      proxy_pass http://nodejs;
      proxy_http_version 1.1;

      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }
  }

  server {
    listen 8080;

    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    server_name .elasticbeanstalk.com;
    return 301 https://$host$request_uri;
  }

  server {
    server_name .amazonaws.com;
    return 301 https://$host$request_uri;
  }
}